"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PathResult = exports.ZeroOrOnePath = exports.ZeroOrMorePath = exports.OneOrMorePath = exports.MultiPath = exports.InversePath = exports.AlternativePath = exports.SequencePath = exports.PredicatePath = void 0;
var PredicatePath = /** @class */ (function () {
    function PredicatePath(predicate) {
        this.predicate = predicate;
    }
    PredicatePath.prototype.toString = function () {
        return "<".concat(this.predicate.value, ">");
    };
    PredicatePath.prototype.match = function (store, focusNode, graphsToIgnore, inverse) {
        var quads, quads_1, quads_1_1, quad, newFocusNode, e_1_1;
        var e_1, _a;
        if (inverse === void 0) { inverse = false; }
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    quads = inverse
                        ? store.getQuads(null, this.predicate, focusNode, null)
                        : store.getQuads(focusNode, this.predicate, null, null);
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 6, 7, 8]);
                    quads_1 = __values(quads), quads_1_1 = quads_1.next();
                    _b.label = 2;
                case 2:
                    if (!!quads_1_1.done) return [3 /*break*/, 5];
                    quad = quads_1_1.value;
                    if (!!graphsToIgnore.includes(quad.graph.value)) return [3 /*break*/, 4];
                    newFocusNode = inverse ? quad.subject : quad.object;
                    return [4 /*yield*/, new PathResult([quad], newFocusNode)];
                case 3:
                    _b.sent();
                    _b.label = 4;
                case 4:
                    quads_1_1 = quads_1.next();
                    return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _b.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (quads_1_1 && !quads_1_1.done && (_a = quads_1.return)) _a.call(quads_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    };
    return PredicatePath;
}());
exports.PredicatePath = PredicatePath;
var SequencePath = /** @class */ (function () {
    function SequencePath(sequence) {
        this.sequence = sequence;
    }
    SequencePath.prototype.matchNext = function (store, inverse, index, path, target, graphsToIgnore) {
        var _a, _b, found, newPath, e_2_1;
        var e_2, _c;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    if (!(index === this.sequence.length)) return [3 /*break*/, 2];
                    return [4 /*yield*/, new PathResult(path.slice(), target)];
                case 1:
                    _d.sent();
                    return [2 /*return*/];
                case 2:
                    _d.trys.push([2, 7, 8, 9]);
                    _a = __values(this.sequence[index].match(store, target, graphsToIgnore, inverse)), _b = _a.next();
                    _d.label = 3;
                case 3:
                    if (!!_b.done) return [3 /*break*/, 6];
                    found = _b.value;
                    newPath = __spreadArray(__spreadArray([], __read(path), false), __read(found.path), false);
                    return [5 /*yield**/, __values(this.matchNext(store, inverse, index + 1, newPath, found.target, graphsToIgnore))];
                case 4:
                    _d.sent();
                    _d.label = 5;
                case 5:
                    _b = _a.next();
                    return [3 /*break*/, 3];
                case 6: return [3 /*break*/, 9];
                case 7:
                    e_2_1 = _d.sent();
                    e_2 = { error: e_2_1 };
                    return [3 /*break*/, 9];
                case 8:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_2) throw e_2.error; }
                    return [7 /*endfinally*/];
                case 9: return [2 /*return*/];
            }
        });
    };
    SequencePath.prototype.toString = function () {
        return this.sequence.map(function (x) { return x.toString(); }).join("/");
    };
    SequencePath.prototype.match = function (store, focusNode, graphsToIgnore, inverse) {
        if (inverse === void 0) { inverse = false; }
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [5 /*yield**/, __values(this.matchNext(store, inverse, 0, [], focusNode, graphsToIgnore))];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    };
    return SequencePath;
}());
exports.SequencePath = SequencePath;
var AlternativePath = /** @class */ (function () {
    function AlternativePath(alternatives) {
        this.alternatives = alternatives;
    }
    AlternativePath.prototype.toString = function () {
        return this.alternatives.map(function (x) { return x.toString(); }).join("|");
    };
    AlternativePath.prototype.match = function (store, focusNode, graphsToIgnore, inverse) {
        var _a, _b, alt, e_3_1;
        var e_3, _c;
        if (inverse === void 0) { inverse = false; }
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    _d.trys.push([0, 5, 6, 7]);
                    _a = __values(this.alternatives), _b = _a.next();
                    _d.label = 1;
                case 1:
                    if (!!_b.done) return [3 /*break*/, 4];
                    alt = _b.value;
                    return [5 /*yield**/, __values(alt.match(store, focusNode, graphsToIgnore, inverse))];
                case 2:
                    _d.sent();
                    _d.label = 3;
                case 3:
                    _b = _a.next();
                    return [3 /*break*/, 1];
                case 4: return [3 /*break*/, 7];
                case 5:
                    e_3_1 = _d.sent();
                    e_3 = { error: e_3_1 };
                    return [3 /*break*/, 7];
                case 6:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_3) throw e_3.error; }
                    return [7 /*endfinally*/];
                case 7: return [2 /*return*/];
            }
        });
    };
    return AlternativePath;
}());
exports.AlternativePath = AlternativePath;
var InversePath = /** @class */ (function () {
    function InversePath(path) {
        this.path = path;
    }
    InversePath.prototype.toString = function () {
        return "^" + this.path.toString();
    };
    InversePath.prototype.match = function (store, focusNode, graphsToIgnore, inverse) {
        if (inverse === void 0) { inverse = false; }
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [5 /*yield**/, __values(this.path.match(store, focusNode, graphsToIgnore, !inverse))];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    };
    return InversePath;
}());
exports.InversePath = InversePath;
var MultiPath = /** @class */ (function () {
    function MultiPath(path, maxCount) {
        this.path = path;
        this.maxCount = maxCount;
    }
    MultiPath.prototype.matchNext = function (index, store, inverse, path, target, graphsToIgnore) {
        var _a, _b, res, e_4_1;
        var e_4, _c;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    // Please no off by one error
                    if (!!this.maxCount && index > this.maxCount)
                        return [2 /*return*/];
                    _d.label = 1;
                case 1:
                    _d.trys.push([1, 8, 9, 10]);
                    _a = __values(this.path.match(store, target, graphsToIgnore, inverse)), _b = _a.next();
                    _d.label = 2;
                case 2:
                    if (!!_b.done) return [3 /*break*/, 7];
                    res = _b.value;
                    if (!this.filter(index, res)) return [3 /*break*/, 4];
                    return [4 /*yield*/, new PathResult(__spreadArray(__spreadArray([], __read(path), false), __read(res.path), false), res.target)];
                case 3:
                    _d.sent();
                    _d.label = 4;
                case 4: return [5 /*yield**/, __values(this.matchNext(index + 1, store, inverse, __spreadArray(__spreadArray([], __read(path), false), __read(res.path), false), res.target, graphsToIgnore))];
                case 5:
                    _d.sent();
                    _d.label = 6;
                case 6:
                    _b = _a.next();
                    return [3 /*break*/, 2];
                case 7: return [3 /*break*/, 10];
                case 8:
                    e_4_1 = _d.sent();
                    e_4 = { error: e_4_1 };
                    return [3 /*break*/, 10];
                case 9:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_4) throw e_4.error; }
                    return [7 /*endfinally*/];
                case 10: return [2 /*return*/];
            }
        });
    };
    MultiPath.prototype.match = function (store, focusNode, graphsToIgnore, inverse) {
        if (inverse === void 0) { inverse = false; }
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [5 /*yield**/, __values(this.matchNext(0, store, inverse, [], focusNode, graphsToIgnore))];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    };
    return MultiPath;
}());
exports.MultiPath = MultiPath;
var OneOrMorePath = /** @class */ (function (_super) {
    __extends(OneOrMorePath, _super);
    function OneOrMorePath(path) {
        return _super.call(this, path) || this;
    }
    OneOrMorePath.prototype.filter = function (times, _res) {
        return times >= 1;
    };
    OneOrMorePath.prototype.toString = function () {
        return this.path.toString() + "+";
    };
    return OneOrMorePath;
}(MultiPath));
exports.OneOrMorePath = OneOrMorePath;
var ZeroOrMorePath = /** @class */ (function (_super) {
    __extends(ZeroOrMorePath, _super);
    function ZeroOrMorePath(path) {
        return _super.call(this, path) || this;
    }
    ZeroOrMorePath.prototype.filter = function (_times, _res) {
        return true;
    };
    ZeroOrMorePath.prototype.toString = function () {
        return this.path.toString() + "*";
    };
    return ZeroOrMorePath;
}(MultiPath));
exports.ZeroOrMorePath = ZeroOrMorePath;
var ZeroOrOnePath = /** @class */ (function (_super) {
    __extends(ZeroOrOnePath, _super);
    function ZeroOrOnePath(path) {
        return _super.call(this, path, 1) || this;
    }
    ZeroOrOnePath.prototype.filter = function (times, _res) {
        return times < 2;
    };
    ZeroOrOnePath.prototype.toString = function () {
        return this.path.toString() + "?";
    };
    return ZeroOrOnePath;
}(MultiPath));
exports.ZeroOrOnePath = ZeroOrOnePath;
var PathResult = /** @class */ (function () {
    function PathResult(path, target) {
        this.path = path;
        this.target = target;
    }
    return PathResult;
}());
exports.PathResult = PathResult;
